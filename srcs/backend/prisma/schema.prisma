// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id            Int      @id @default(autoincrement())
  channelName   String?
  userId        Int?
  fromUserName  String
  fromUserId    Int
  content       String
  fromChannelId Int?
  fromChann     Channel? @relation(fields: [fromChannelId], references: [id])
}

model Channel {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  creator    User      @relation(fields: [creator_id], references: [id])
  creator_id Int
  messages   Message[]
  password   String?
  joined     User[]    @relation("users_in_channel")
  muted      User[]    @relation("muted_in_channel")
  banned     User[]    @relation("banned_in_channel")
  admins     User[]    @relation("admin_of")
}

model User {
  id             Int       @id
  email          String?   @unique
  login          String?   @unique
  first_name     String?
  last_name      String?
  url            String?
  displayname    String?
  nickname       String?
  image          String?
  avatar         String?
  level          Int       @default(0)
  xp             Int       @default(0)
  online         Int       @default(0)
  oauth_id       Int       @unique
  oauth          Oauth?    @relation(fields: [oauth_id], references: [id])
  socket         String?
  friends        User[]    @relation("friends")
  friendsof      User[]    @relation("friends")
  blocked        User[]    @relation("blocked")
  blockedby      User[]    @relation("blocked")
  creatorOf      Channel[]
  channel_joined Channel[] @relation("users_in_channel")
  muted          Channel[] @relation("muted_in_channel")
  banned         Channel[] @relation("banned_in_channel")
  admin_of       Channel[] @relation("admin_of")
  games          Game[]
}

model Game {
  id            Int    @id @default(autoincrement())
  roomName      String
  players       User[]
  player1_score Int    @default(0)
  player2_score Int    @default(0)
  player1_id    Int    @default(0)
  player2_id    Int    @default(0)
}

model Oauth {
  id            Int     @id @default(autoincrement())
  code          String? @unique
  refresh_token String? @unique
  access_token  String? @unique
  tfa_id        Int     @unique
  user          User?
  tfa           Tfa?    @relation(fields: [tfa_id], references: [id])
}

model Tfa {
  id              Int     @id @default(autoincrement())
  tfa_activated   Boolean @default(false)
  tfa_temp_secret String? @unique
  tfa_secret      String? @unique
  tfa_qr          String? @unique
  oauth           Oauth?
}
